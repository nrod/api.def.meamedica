FORMAT: 1A
HOST: http://api.meamedica.nl/

# meamedica API

## Scope

This is an API to define and disclose methods to interact with medical data. 
This API will be continuously updated and developed to provide methods that 
can be used in several medical areas.

### Current Business Areas
 - Dental Practices

## Ownership

Although public, this API blueprint is developed and made available 
by **[Insight Pharma Services BV](http://www.insightpharma.nl)**. It is possible 
that some of the methods here described are already developed to fullfil a 
specific client need. Any questions, comments or requests can therefore be sent 
to the contacts available in our site.

## Disclaimer

Absolutely nothing is granted by the direct or indirect use of the content 
hereby described. This API contains references to medical terms and/or concepts
that exist in the Netherlands. These terms and/or concepts might not apply to 
other countries.

## Version History

**v1.0.280915** - First version of Dental Practice API which includes 3 methods 
(create practice/dentists, create patient, load patient overview).

# Group Dental Practice API

## Practice Management  [/practice]

The current release includes a few core management methods which enable:
 - the creation of a practice with a set of dentists
 - the creation of patients that are registered in a given practice
 - the loading of overview information about a given patient

### Create a new Practice with Dentists [POST]

This method can be used to create a new dental practice with a set of dentists. 
It expects to receive data about the practice and also about the dentists that 
work in the practice.
The request should then contain:
 - About the practice
   - AGB code
   - Name
   - Address
   - Postal code
   - City
   - Email
   - Number of patients
 - About the dentists (a list of) 
   - BIG number
   - AGB code
   - Initials
   - Last name
   - Specialty
   - Email

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - a Messages list 
   - the practice `AGB code` in case of success or a list of the `errors` that occurred

**Usage:** `POST` to *https://api.meamedica.nl/practice*

+ Request (application/json)

        {
            "AgbCode": "string",
            "Name": "string",
            "Address": "string",
            "PostalCode": "string",
            "City": "string",
            "Email": "string",
            "NumberOfPatients": 0,
            "Dentists": [
                {
                  "BigNumber": "string",
                  "AgbCode": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Specialty": "string",
                  "Email": "string"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Patient Management  [/patient]

### Create new Patients for a Practice [POST]

This method can be used to create one or more patients for a given practice. 
It expects to receive data about the patients and about the practice were 
they are registered as well as the dentist that they are assigned to.
The request should then contain:
 - About the practice
   - AGB code
 - About the patients (a list of) 
   - Patient ID (in the client system)
   - AGB code (from the assigned dentist)
   - Gender (m/f)
   - Birthdate (dd-mm-yyyy)
   - Height (in cm)
   - Weight (in kg)

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - a Messages list 
   - the practice `AGB code` in case of success or a list of the `errors` that occurred
 - a PatientInfo list with
   - Patient ID (in the client system)
   - Patient Status (`NOT_EXIST`, `OK_INACTIVE`, `OK_ACTIVE`)
   - Activation URL (not applicable `OK_ACTIVE`)

**Usage:** `POST` to *https://api.meamedica.nl/patient*

+ Request (application/json)

        {
            "PracticeAgbCode": "string",
            "Patients": [
                {
                  "PatientId": "string",
                  "CareProfessionialAgbCode": "string",
                  "Gender": "string",
                  "Birthdate": "string",
                  "Height": "string",
                  "Weight": "string"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ],
            "PatientInfo": [
                {
                  "PatientId": "string",
                  "PatientStatus": "string",
                  "ActivationUrl": "string"
                }
            ]
        }

### Load overview information about a Patient [GET]

This method is used to get an overview of some patient information.
The request should then contain:
 - Practice AGB code
 - Dentist AGB code
 - Patient ID (in the client system)

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - and Patient information 
   - the AGB Code of the dentist 
   - Patient ID (in the client system)
   - ASA Score
   - Number of Medicines in use
   - Number of MTI messages
   - Date of information (dd-mm-yyyy)

**Usage:** `GET` from *https://api.meamedica.nl/patient?practiceagbcode=NN&careprofessionalagbcode=NN&patientid=NN*

+ Request (application/json)

        {
            "PracticeAgbCode": "string",
            "CareProfessionialAgbCode": "string",
            "PatientId": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "AgbCode": "string",
            "PatientId": "string",
            "AsaScore": "string",
            "NrOfMedicines": "string",
            "NrOfMtiMessages": "string",
            "InformationDate": "string"
        }

# Group Technical Reference

Just as a background note this API documentation was done using 
[Apiary](https://apiary.io) and (some of) the resources used to describe 
it can be found in the following URLs:
 - **API Blueprint Tutorial** : https://apiary.io/blueprint
 - **API Examples** : https://github.com/apiaryio/api-blueprint/tree/master/examples
 - **API Blueprint** : https://apiblueprint.org/ (detailed technical information)
