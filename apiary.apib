FORMAT: 1A
HOST: https://api.meamedica.nl/

# meamedica API

## Scope

This is an API to define and disclose methods to interact with medical data. 
This API will be continuously updated and developed to provide methods that 
can be used in several medical areas.

### Current Business Areas
- Dental Practices

## Ownership

Although public, this API blueprint is developed and made available 
by **[Insight Pharma Services BV](http://www.insightpharma.nl)**. It is possible 
that some of the methods here described are already developed to fullfil a 
specific client need. Any questions, comments or requests can therefore be sent 
to the contacts available in our site. You can also follow us on 
[twitter](https://twitter.com/mijnmedicijn) or [facebook](https://www.facebook.com/mijnmedicijn).

## Information Security

This API is hosted in a [Microsoft Azure](https://azure.microsoft.com/en-us/overview/what-is-azure/) 
infrastructure which is one of the most recognized cloud services available. Among 
several other technological aspects, Microsoft Azure is also known for a high security 
level and for this matter it is compliant with the ISO industry standards 
[ISO27001](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27001/) 
(Information Security Management Standards) and [ISO27018](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27018/) 
(Protection of Personally Identifiable Information in public clouds).

## Disclaimer

Absolutely nothing is granted by the direct or indirect use of the content 
hereby described. This API contains references to medical terms and/or concepts
that exist in the Netherlands. These terms and/or concepts might not apply to 
other countries.

## Version History

### v1.0.280915
Added Dental Practice API group which includes 3 methods 
(create practice/dentists, create patient, load patient overview).

### v1.1.071015
Added Common API group which includes 2 methods (access, version),
implemented token-based authentication in all methods and updated Usage URLs.

### v1.2.131015
Added new Dental Practice methods (subscription, dentist). This last one replaces
partially the create practice method that is only to create the practice itself.

### v1.3.191015
Added new method to get Dentists and/or Assistents from a Practice. 
Internal optimizations and new documentation organization which includes new
URLs for API methods.

### v1.4.121115
Added new methods in Patient, Practice and Subscription. Revised token format
now more suitable for use in an URL. Several internal optimizations and validations.

# Group Common API

## Authentication Token > Get [/access?clientKey={clientKey}]

+ Parameters
    + clientKey: b2c38708d821833daf11 (required, string) - subscription client key as an encoded string

### API Definition [GET]

This method is used to get a token based on a valid client key. Clients will 
receive their client key when they subscribe to this API service. This token must
then be used in all other requests to API methods here described.

The URL should then contain the parameter:
- the client key

The response will contain:
- an authorized and encrypted token

+ Response 200 (application/json)

        {
            "Token": "string"
        }

## Current Version > Get [/version]

### API Definition [GET]

This method is used to get the current version of this API mainly for informative
purposes. Nothing is expected in the request or as an URL parameter.

The response will contain:
- the current version 

+ Response 200 (application/json)

        {
            "Version": "string"
        }

# Group Dental API

## Practice > Create [/practice/create]

### API Definition [POST]

This method should be used to create a new dental practice. Besides some basic data
about the practice we should get the practice AGB code and also an email for contact 
purposes. It should be also provided the number of patients currently registered.

The request should then contain:
- Authorization token
- About the practice
 - AGB code
 - Name
 - Address
 - Postal code
 - City
 - Email
 - Number of patients

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
  - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "AgbCode": "string",
            "Name": "string",
            "Address": "string",
            "PostalCode": "string",
            "City": "string",
            "Email": "string",
            "NumberOfPatients": 0,
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Practice > Get Information [/practice/get?practiceAgb={agb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the practice identified by 
the AGB code given as parameter.

The URL should then contain:
 - Authorization token
 - Practice AGB code

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- and about the practice
 - Name
 - Address
 - Phone
 - Kvk
 - Date created (dd-mm-yyyy)
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Name": "string",
            "Address": "string",
            "Phone": "string",
            "Kvk": "string",
            "DateCreated": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Practice > Get Dentists [/practice/dentists/get?practiceAgb={agb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the dentists and assistents
that work in the practice identified by the AGB code given as parameter.

The URL should then contain:
 - Authorization token
 - Practice AGB code

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- the Practice AGB code 
- a list of Dentists
 - Initials
 - Last Name
 - Specialty
 - Email
 - BIG number
 - AGB code (if available)
 - KNMT number (if available)
- a list of Assistents
 - Initials
 - Last Name
 - Email
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentists": [
                {
                    "BigNumber": "string",
                    "AgbCode": "string",
                    "KnmtNumber": "string",
                    "Initials": "string",
                    "LastName": "string",
                    "Specialty": "string",
                    "Email": "string"
                }
            ],
            "Assistents": [
                {
                    "Initials": "string",
                    "LastName": "string",
                    "Email": "string"
                }
            ],
            "Result": "string",
            "Messages": [
                "string"
            ],
        }

## Dentist > Create [/dentist/create]

### API Definition [POST]

This method is meant to add a list of dentists and/or assistents to an existing
practice. There are two lists with data, one for the dentists and the other for 
the assistents. The practice AGB code is required as matching identifier. 

The request should then contain:
- Authorization Token
- Practice AGB code
- About the dentists (a list of)
 - BIG number
 - AGB code
 - KNMT number
 - Initials
 - Last name
 - Specialty
 - Email
- About the assistents (a list of) (optional)
 - Initials
 - Last name
 - Email

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Dentists": [
                {
                  "BigNumber": "string",
                  "AgbCode": "string",
                  "KnmtNumber": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Specialty": "string",
                  "Email": "string"
                }
            ],
            "Assistents": [
                {
                  "Initials": "string",
                  "LastName": "string",
                  "Email": "string"
                }
            ],
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Dentist > Get Information [/dentist/get?dentistId={did}&token={token}]

+ Parameters
    + dentistId: 12345678 (required, number) - BIG number, AGB code or client-side identifier
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the dentist or assistend 
identified by the BIG number (only dentists) given. Alternatively the AGB code
can also be used as parameter or a client-side identifier.

The URL should then contain:
 - Authorization token
 - Dentist identifier (BIG, AGB or client-side id)

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- the Practice AGB code 
- a list of Dentists
 - Initials
 - Last Name
 - Specialty
 - Email
 - BIG number
 - AGB code (if available)
 - KNMT number (if available)
- a list of Assistents
 - Initials
 - Last Name
 - Email
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentist": {
                "BigNumber": "string",
                "AgbCode": "string",
                "KnmtNumber": "string",
                "Initials": "string",
                "LastName": "string",
                "Specialty": "string",
                "Email": "string"
            },
            "Assistent": {
                "Initials": "string",
                "LastName": "string",
                "Email": "string"
            },
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Create Patient [/patient/create]

### API Definition [POST]

This method can be used to create one or more patients for a given practice. 
It expects to receive data about the patients and about the practice were 
they are registered as well as the dentist that they are assigned to.

The request should then contain:
- Authorization Token
- Practice AGB code
- About the patients (a list of) 
 - Patient ID (in the client system)
 - Dentist AGB code
 - Gender (m/f)
 - Birthdate (dd-mm-yyyy)
 - Height (in cm)
 - Weight (in kg)

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- a PatientInfo list with
 - Patient ID (in the client system)
 - Patient Status (`NOT_EXIST`, `OK_INACTIVE`, `OK_ACTIVE`)
 - Activation URL (not applicable to `OK_ACTIVE`)

+ Request (application/json)

        {
            "Token": "string",
            "PracticeAgb": "string",
            "Patients": [
                {
                  "PatientId": "string",
                  "DentistAgb": "string",
                  "Gender": "string",
                  "Birthdate": "string",
                  "Height": "string",
                  "Weight": "string"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ],
            "PatientInfo": [
                {
                  "PatientId": "string",
                  "PatientStatus": "string",
                  "ActivationUrl": "string"
                }
            ]
        }

## Get Patient Overview [/patient/overview/get?practiceagb={practiceagb}&dentistagb={dentistagb}&patientid={patientid}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + dentistagb: 54325432 (required, number) - dentist AGB code as an 8-digit number
    + patientid: 1 (required, number) - patient identifier in client system
    + token: q1Ycm5BTp4f9qQV43fGgWIMSN348BYkTOJVzx5EI6qhLgtPhXvFEc16wO7Y00000 (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get an overview of some patient information. The information
will be given only if the patient belongs to the specified practice and dentist.

The URL should then contain:
- Authorization Token
- Practice AGB code
- Dentist AGB code
- Patient ID (in the client system)

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- and Patient information 
 - Dentist AGB code 
 - Patient ID (in the client system)
 - ASA Score
 - Number of Medicines in use
 - Number of MTI messages
 - Date of information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "Result": "string",
            "DentistAgb": "string",
            "PatientId": "string",
            "AsaScore": "string",
            "NrOfMedicines": "string",
            "NrOfMtiMessages": "string",
            "InformationDate": "string"
        }

## Create Subscription [/subscription/create]

### API Definition [POST]

This method is intended to assign subscription data to an existing practice. Besides
the subscription data, there is also some payment and pricing information that 
should be provided.

The request should then contain:
- Authorization Token
- Practice AGB code
- Description (optional)
- License Type: **Y**early, **M**onthly, **A**uto renew monthly
- Pricing Type: **S**tandalone, **I**ntegrated
- Pricing Tier: **B**asic, **S**tandard, **P**remium
- Payment Type: **i**Deal, **M**astercard, **V**isa, **B**ank transfer, **A**ut. Incasso

If Payment Type is a credit card (Mastercard, Visa):
- Card Number
- Card Year
- Card Month
- Card Code
- Card Name
 
If Payment Type is a bank transfer or automatic debit:
- Account Number

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "Token": "string",
            "AgbCode": "string",
            "Description": "string",
            "LicenseType": "string",
            "PricingType": "string",
            "PricingTier": "string",
            "PaymentType": "string",
            "CardNumber": "string",
            "CardYear": 0,
            "CardMonth": 0,
            "CardCode": 0,
            "CardName": "string",
            "AccountNumber": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

# Group Technical Reference

As a background note this API documentation is hosted at and was done using 
[Apiary](https://apiary.io) and (some of) the resources used to describe 
it can be found in the following URLs:
- **API Blueprint Tutorial** : https://apiary.io/blueprint
- **API Examples** : https://github.com/apiaryio/api-blueprint/tree/master/examples
- **API Blueprint** : https://apiblueprint.org/ (detailed technical information)
