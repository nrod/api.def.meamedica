FORMAT: 1A
HOST: https://api.meamedica.nl/

# meamedica API

## Scope & Status

This is an API to define and disclose methods to interact with medical data. 
This API will be continuously updated and developed to provide methods that 
can be used in several medical areas.

### Current Business Areas
- Dental Practices

### Current API Status
- Operating normally.

## Ownership

Although public, this API blueprint is developed and made available 
by **[Insight Pharma Services BV](http://www.insightpharma.nl)**. It is possible 
that some of the methods here described are already developed to fullfil a 
specific client need. Any questions, comments or requests can therefore be sent 
to the contacts available in our site. You can also follow us on 
[twitter](https://twitter.com/mijnmedicijn) or [facebook](https://www.facebook.com/mijnmedicijn).

## Information Security

This API is hosted in a [Microsoft Azure](https://azure.microsoft.com/en-us/overview/what-is-azure/) 
infrastructure which is one of the most recognized cloud services available. Among 
several other technological aspects, Microsoft Azure is also known for a high security 
level and for this matter it is compliant with the ISO industry standards 
[ISO27001](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27001/) 
(Information Security Management Standards) and [ISO27018](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27018/) 
(Protection of Personally Identifiable Information in public clouds).

## Disclaimer

Absolutely nothing is granted by the direct or indirect use of the content 
hereby described. This API contains references to medical terms and/or concepts
that exist in the Netherlands. These terms and/or concepts might not apply to 
other countries.

## Version History

### v1.0.280915
Added Dental Practice API group which includes 3 methods 
(create practice/dentists, create patient, load patient overview).

### v1.1.071015
Added Common API group which includes 2 methods (access, version),
implemented token-based authentication in all methods and updated Usage URLs.

### v1.2.131015
Added new Dental Practice methods (subscription, dentist). This last one replaces
partially the create practice method that is only to create the practice itself.

### v1.3.191015
Added new method to get Dentists and/or Assistants in a Practice. 
Internal optimizations and new documentation organization which includes new
URLs for API methods.

### v1.4.121115
Added new methods in Patient (Get) and Dentist (Get). Changed Subscription 
(Create to Activate), added Modify and Get. Revised and improved token format: 
now more suitable for use in an URL. Several internal optimizations and validations.

### v1.5.181115
(Î±-version) Several code optimizations, improvements and validations. Access token is now generated
with a timestamp which makes it valid only for a certain period of time. 

# Group Common API

## Authentication > Get Token [/access?clientKey={clientKey}]

+ Parameters
    + clientKey: b2c38708d821833daf11 (required, string) - subscription client key as an encoded string

### API Definition [GET]

This method is used to get a token based on a valid client key. Clients will 
receive their client key when they subscribe to this API service. This token must
then be used in all other requests to API methods here described.

The URL should then contain the parameter:
- the client key

The response will contain:
- an authorized and encrypted token

+ Response 200 (application/json)

        {
            "Token": "string"
        }

## Current Version > Get [/version]

### API Definition [GET]

This method is used to get the current version of this API mainly for informative
purposes. Nothing is expected in the request or as an URL parameter.

The response will contain:
- the current version 

+ Response 200 (application/json)

        {
            "Version": "string"
        }

# Group Dental API

## Practice > Create [/practice/create]

### API Definition [POST]

This method should be used to create a new dental practice. Besides some basic data
about the practice we should get the practice AGB code and also an email for contact 
purposes. It should be also provided the number of patients currently registered.

The request should then contain:
- Authorization token
- About the practice
 - AGB code
 - Name
 - Address
 - Postal code
 - City
 - Email
 - Number of patients

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
  - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Name": "string",
            "Address": "string",
            "PostalCode": "string",
            "City": "string",
            "Email": "string",
            "NumberOfPatients": 0,
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Practice > Get Information [/practice/get?practiceAgb={practiceAgb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the practice identified by 
the AGB code given as parameter.

The URL should then contain:
 - Authorization token
 - Practice AGB code

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- and about the practice
 - Name
 - Address
 - Phone
 - Kvk
 - Date created (dd-mm-yyyy)
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Name": "string",
            "Address": "string",
            "Phone": "string",
            "Kvk": "string",
            "DateCreated": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Practice > Get Dentists [/practice/dentists/get?practiceAgb={practiceAgb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the dentists and assistants
that work in the practice identified by the AGB code given as parameter.

The URL should then contain:
 - Authorization token
 - Practice AGB code

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- the Practice AGB code 
- a list of Dentists
 - Dentist identifier
 - BIG number (if available)
 - KNMT number (if available)
 - Initials
 - Last Name
 - Specialty
 - Email (if available)
- a list of Assistants
 - Assistant identifier
 - Initials
 - Last Name
 - Email (if available)
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentists": [
                {
                    "DentistId": "string",
                    "BigNumber": "string",
                    "KnmtNumber": "string",
                    "Initials": "string",
                    "LastName": "string",
                    "Specialty": "string",
                    "Email": "string"
                }
            ],
            "Assistants": [
                {
                    "AssistantId": "string",
                    "Initials": "string",
                    "LastName": "string",
                    "Email": "string"
                }
            ],
            "Result": "string",
            "Messages": [
                "string"
            ],
        }

## Dentist > Create [/dentist/create]

### API Definition [POST]

This method is meant to add a list of dentists and/or assistants to an existing
practice. There are two lists with data, one for the dentists and the other for 
the assistants. The practice AGB code is required as matching identifier. 

The request should then contain:
- Authorization Token
- Practice AGB code
- About the dentists (a list of)
 - Dentist identifier
 - BIG number (optional)
 - KNMT number (optional)
 - Initials
 - Last name
 - Specialty
 - Email (optional)
- About the assistants (a list of) (optional)
 - Assistant identifier
 - Initials
 - Last name
 - Email (optional)

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Dentists": [
                {
                  "DentistId": "string",
                  "BigNumber": "string",
                  "KnmtNumber": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Specialty": "string",
                  "Email": "string"
                }
            ],
            "Assistants": [
                {
                  "AssistantId": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Email": "string"
                }
            ],
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Dentist > Get Information [/dentist/get?practiceAgb={practiceAgb}&dentistId={dentistId}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + dentistId: 12345678 (required, number) - BIG number, AGB code or client-side identifier
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get detailed information about the dentist or assistant given. 
A dentist or an assistant should be identified their client-side identifier.

The URL should then contain:
 - Authorization token
 - Dentist or Assistant identifier

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- the Practice AGB code 
- a Dentist (Assistant should be empty)
 - Dentist identifier
 - BIG number (if available)
 - KNMT number (if available)
 - Initials
 - Last Name
 - Specialty
 - Email (if available)
- an Assistant (Dentist should be empty)
 - Assistant identifier
 - Initials
 - Last Name
 - Email (if available)
- the date of this information (dd-mm-yyyy)

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentist": {
                "DentistId": "string",
                "BigNumber": "string",
                "KnmtNumber": "string",
                "Initials": "string",
                "LastName": "string",
                "Specialty": "string",
                "Email": "string"
            },
            "Assistant": {
                "AssistantId": "string",
                "Initials": "string",
                "LastName": "string",
                "Email": "string"
            },
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Patient > Create [/patient/create]

### API Definition [POST]

This method can be used to create one or more patients for a given practice. 
It expects to receive some generic data about the patients and about the 
practice were they are registered.

The request should then contain:
- Authorization Token
- Practice AGB code
- About the patients (a list of) 
 - Patient Number (in the client system)
 - Gender (m/f)
 - Birthdate (dd-mm-yyyy)
 - Height (in cm)
 - Weight (in kg)

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
- a PatientInfo list with
 - Patient Number (in the client system)
 - Patient Status (`NEW`, `INACTIVE`, `ACTIVE`)
 - Activation URL (only applicable to `NEW`, empty otherwise)

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Patients": [
                {
                  "PatientNr": "string",
                  "Gender": "string",
                  "Birthdate": "string",
                  "Height": "string",
                  "Weight": "string"
                }
            ],
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Patients": [
                {
                  "PatientNr": "string",
                  "PatientStatus": "string",
                  "ActivationUrl": "string"
                }
            ],
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Patient > Get Overview [/patient/overview/get?practiceagb={practiceagb}&patientnr={patientnr}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + patientnr: 1 (required, number) - patient identifier in client system
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get an overview of some patient information. The information
will be given only if the patient belongs to the specified practice and dentist.

The URL should then contain:
- Authorization Token
- Practice AGB code
- Patient Number (in the client system)

The response will contain:
- Dentist identifier (BIG, AGB or client-side id) 
- Patient Number (in the client system)
- Patient overview information 
 - Latest ASA Score
 - Number of Medicines in use
 - Number of MTI messages
- the date of this information (dd-mm-yyyy)
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
 
+ Response 200 (application/json)

        {
            "DentistId": "string",
            "PatientNr": "string",
            "AsaScore": "string",
            "NrOfMedicines": "string",
            "NrOfMtiMessages": "string",
            "InformationDate": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
## Patient > Get Information [/patient/get?practiceagb={practiceagb}&patientnr={patientnr}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + patientnr: 1 (required, number) - patient identifier in client system
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get details about the given patient. The information
will be given only if the patient belongs to the specified practice and dentist.

The URL should then contain:
- Authorization Token
- Practice AGB code
- Patient Number (in the client system)

The response will contain:
- Dentist identifier (BIG, AGB or client-side id) 
- Patient Number (in the client system)
- Patient overview information 
 - First Name
 - Last Name
 - Birthdate
 - Gender
 - Blood Group
 - Length
 - Weight
 - City
 - Country
 - Patient Status (`NEW`, `INACTIVE`, `ACTIVE`)
- the date of this information (dd-mm-yyyy)
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
 
+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "DentistId": "string",
            "PatientNr": "string",
            "FirstName": "string",
            "LastName": "string",
            "BirthDate": "string",
            "Gender": "string",
            "Bloodgroup": "string",
            "Length": "string",
            "Weight": "string",
            "City": "string",
            "Country": "string",
            "PatientStatus": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Subscription > Activate [/subscription/activate?practiceagb={practiceagb}&email={email}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + email: info@practice.nl (required, string) - administrative email of the practice
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [POST]

This method is intended to activate a subscription for an existing practice. It
requires information about the practice to activate, an administrative email address
and the authorization token.

The request should then contain:
- Authorization Token
- Practice AGB code
- Practice administrative email

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
## Subscription > Modify [/subscription/modify]

### API Definition [POST]

This method is intended to modify an existing subscription. It requires the 
practice AGB as an identifier and afterwards subscription data, payment and 
pricing information.

The request should then contain:
- Authorization Token
- Practice AGB code
- Description (optional)
- License Type: **Y**early, **M**onthly, **A**uto renew monthly
- Pricing Tier: **B**asic, **S**tandard, **P**remium
- Payment Type: **i**Deal, **M**asterCard, **V**isa, **B**ank transfer, **A**utomatic Debit

If Payment Type is a credit card (Mastercard, Visa):
- Card Number
- Card Year
- Card Month
- Card Code
- Card Name
 
If Payment Type is an automatic debit:
- Account Number

The response will contain:
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Description": "string",
            "LicenseType": "string",
            "PricingTier": "string",
            "PaymentType": "string",
            "CardNumber": "string",
            "CardYear": 0,
            "CardMonth": 0,
            "CardCode": 0,
            "CardName": "string",
            "AccountNumber": "string",
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
## Subscription > Get [/subscription/get?practiceagb={practiceagb}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

This method is used to get details about the subscription assigned to the given 
practice. The resulting information does not include any sensitive and/or financial 
data. 

The URL should then contain:
- Authorization Token
- Practice AGB code

The response will contain:
- Subscription information 
 - Description
 - Date created (dd-mm-yyyy)
 - License Type: Yearly, Monthly, AutoRenew
 - License Date (dd-mm-yyyy)
 - Discount
 - Pricing Tier: Basic, Standard, Premium
 - Price per Patient (eur)
 - Payment Type: iDeal, MasterCard, Visa, Bank transfer, Automatic Debit
- the date of this information (dd-mm-yyyy)
- a Result value 
 - `OK` in case of success or a `message` otherwise 
- a Messages list 
 - the practice `AGB code` in case of success or a list of the `errors` that occurred
 
+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Description": "string",
            "DateCreated": "string",
            "LicenseType": "string",
            "LicenseDate": "string",
            "Discount": "string",
            "PricingTier": "string",
            "PricePerPatient": "string",
            "PaymentType": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

# Group Technical Reference

As a background note this API documentation is hosted at and was done using 
[Apiary](https://apiary.io) and (some of) the resources used to describe 
it can be found in the following URLs:
- **API Blueprint Tutorial** : https://apiary.io/blueprint
- **API Examples** : https://github.com/apiaryio/api-blueprint/tree/master/examples
- **API Blueprint** : https://apiblueprint.org/ (detailed technical information)
