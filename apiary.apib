FORMAT: 1A
HOST: https://api.meamedica.nl/

# meamedica API

## Scope

This is an API to define and disclose methods to interact with medical data. 
This API will be continuously updated and developed to provide methods that 
can be used in several medical areas.

### Current Business Areas
 - Dental Practices

## Ownership

Although public, this API blueprint is developed and made available 
by **[Insight Pharma Services BV](http://www.insightpharma.nl)**. It is possible 
that some of the methods here described are already developed to fullfil a 
specific client need. Any questions, comments or requests can therefore be sent 
to the contacts available in our site.

## Disclaimer

Absolutely nothing is granted by the direct or indirect use of the content 
hereby described. This API contains references to medical terms and/or concepts
that exist in the Netherlands. These terms and/or concepts might not apply to 
other countries.

## Version History

### v1.0.280915
Added Dental Practice API group which includes 3 methods 
(create practice/dentists, create patient, load patient overview).

### v1.1.071015
Added Common API group which includes 2 methods (access, version),
implemented token-based authentication in all methods and updated Usage URLs.

### v1.2.121015
Added new Dental Practice method (subscription) and fine tuned some other methods.

# Group Common API

## Authentication  [/access]

### Get a token based on a client key [GET]

This method is used to get a token based on a valid client key. Clients will 
receive their client key when they subscribe to this API service. This token must
then be used in all other requests to API methods here described.
The request should then contain:
 - a `String` value with the client key

The response will contain:
 - a `String` value with an authorized token

**Usage:** `GET` from *https://api.meamedica.nl/access?clientKey=key*

+ Request (application/json)

        {
            "ClientKey": "string"
        }

+ Response 200 (application/json)

        {
            "Token": "string"
        }

## Version  [/version]

### Get the current API version [GET]

This method is used to get the current version of this API mainly for informative
purposes.
Nothing is expected in the request.

The response will contain:
 - a `String` value with the current version 

**Usage:** `GET` from *https://api.meamedica.nl/version*

+ Request (application/json)

+ Response 200 (application/json)

        {
            "Version": "string"
        }

# Group Dental Practice API

## Practice Management  [/practice]

### Create a new Practice with Dentists [POST]

This method can be used to create a new dental practice with a set of dentists. 
It expects to receive data about the practice and also about the dentists that 
work in the practice.
The request should then contain:
 - Authorization Token
 - About the practice
   - AGB code
   - Name
   - Address
   - Postal code
   - City
   - Email
   - Number of patients
 - About the dentists (a list of) (optional)
   - BIG number
   - AGB code
   - KNMT number
   - Initials
   - Last name
   - Specialty
   - Email
 - About the assistents (a list of) (optional)
   - Initials
   - Last name
   - Email

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - a Messages list 
   - the practice `AGB code` in case of success or a list of the `errors` that occurred

**Usage:** `POST` to *https://api.meamedica.nl/practice*

+ Request (application/json)

        {
            "Token": "string",
            "AgbCode": "string",
            "Name": "string",
            "Address": "string",
            "PostalCode": "string",
            "City": "string",
            "Email": "string",
            "NumberOfPatients": 0,
            "Dentists": [
                {
                  "BigNumber": "string",
                  "AgbCode": "string",
                  "KnmtNumber": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Specialty": "string",
                  "Email": "string"
                }
            ],
            "Assistents": [
                {
                  "Initials": "string",
                  "LastName": "string",
                  "Email": "string"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

## Patient Management  [/patient]

### Create new Patients for a Practice [POST]

This method can be used to create one or more patients for a given practice. 
It expects to receive data about the patients and about the practice were 
they are registered as well as the dentist that they are assigned to.
The request should then contain:
 - Authorization Token
 - Practice AGB code
 - About the patients (a list of) 
   - Patient ID (in the client system)
   - Dentist AGB code (this patient's dentist)
   - Gender (m/f)
   - Birthdate (dd-mm-yyyy)
   - Height (in cm)
   - Weight (in kg)

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - a Messages list 
   - the practice `AGB code` in case of success or a list of the `errors` that occurred
 - a PatientInfo list with
   - Patient ID (in the client system)
   - Patient Status (`NOT_EXIST`, `OK_INACTIVE`, `OK_ACTIVE`)
   - Activation URL (not applicable to `OK_ACTIVE`)

**Usage:** `POST` to *https://api.meamedica.nl/patient*

+ Request (application/json)

        {
            "Token": "string",
            "PracticeAgb": "string",
            "Patients": [
                {
                  "PatientId": "string",
                  "DentistAgb": "string",
                  "Gender": "string",
                  "Birthdate": "string",
                  "Height": "string",
                  "Weight": "string"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ],
            "PatientInfo": [
                {
                  "PatientId": "string",
                  "PatientStatus": "string",
                  "ActivationUrl": "string"
                }
            ]
        }

### Load overview information about a Patient [GET]

This method is used to get an overview of some patient information.
The request should then contain:
 - Authorization Token
 - Practice AGB code
 - Dentist AGB code
 - Patient ID (in the client system)

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - and Patient information 
   - Dentist AGB code 
   - Patient ID (in the client system)
   - ASA Score
   - Number of Medicines in use
   - Number of MTI messages
   - Date of information (dd-mm-yyyy)

**Usage:** `GET` from *https://api.meamedica.nl/patient?token=xyz&practiceagb=1&dentistagb=1&patientid=1*

+ Request (application/json)

        {
            "Token": "string",
            "PracticeAgb": "string",
            "DentistAgb": "string",
            "PatientId": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "DentistAgb": "string",
            "PatientId": "string",
            "AsaScore": "string",
            "NrOfMedicines": "string",
            "NrOfMtiMessages": "string",
            "InformationDate": "string"
        }

## Subscription Management  [/subscription]

### Create a Subscription and a Payment model [POST]

This method is intended to assign subscription data to an existing practice. Besides
the subscription data, there is also some payment and pricing information that 
should be provided.
The request should then contain:
 - Authorization Token
 - Practice AGB code
 - Description (optional)
 - License Type: (Y)early, (M)onthly, (A)uto renew monthly
 - Pricing Type: (S)tandalone, (I)ntegrated
 - Pricing Tier: (B)asic, (S)tandard, (P)remium
 - Payment Type: i(D)eal, (M)asterCard, (V)isa, (A)mEx, (B)ank transfer, Aut. (I)ncasso

If Payment Type is a credit card (MasterCard, Visa or AmEx):
 - Card Number
 - Card Year
 - Card Month
 - Card Code
 - Card Name
 
If Payment Type is a bank transfer or automatic debit:
 - Account Number

The response will contain:
 - a Result value 
   - `OK` in case of success or a `message` otherwise 
 - a Messages list 
   - the practice `AGB code` in case of success or a list of the `errors` that occurred

**Usage:** `POST` to *https://api.meamedica.nl/subscription*

+ Request (application/json)

        {
            "Token": "string",
            "AgbCode": "string",
            "Description": "string",
            "LicenseType": "string",
            "PricingType": "string",
            "PricingTier": "string",
            "PaymentType": "string",
            "CardNumber": "string",
            "CardYear": 0,
            "CardMonth": 0,
            "CardCode": 0,
            "CardName": "string",
            "AccountNumber": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }

# Group Technical Reference

As a background note this API documentation is hosted at and was done using 
[Apiary](https://apiary.io) and (some of) the resources used to describe 
it can be found in the following URLs:
 - **API Blueprint Tutorial** : https://apiary.io/blueprint
 - **API Examples** : https://github.com/apiaryio/api-blueprint/tree/master/examples
 - **API Blueprint** : https://apiblueprint.org/ (detailed technical information)
