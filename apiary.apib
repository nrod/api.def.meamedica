FORMAT: 1A
HOST: https://api.meamedica.nl/

# meamedica API

## Scope & Status

This is an API to define and disclose methods to interact with medical data. 
This API will be continuously updated and developed to provide methods that 
can be used in several medical areas.

#### Current Business Areas
- Dental Practices

#### Current API Status
- Operating normally but may be subject to changes without prior notice.

## Ownership

Although public, this API blueprint is developed and made available 
by **[Insight Pharma Services BV](http://www.insightpharma.nl)**. It is possible 
that some of the methods here described are already developed to fullfil a 
specific client need. Any questions, comments or requests can therefore be sent 
to the contacts available in our site. You can also follow us on 
[twitter](https://twitter.com/mijnmedicijn) or [facebook](https://www.facebook.com/mijnmedicijn).

## Information Security

This API is hosted in a [Microsoft Azure](https://azure.microsoft.com/en-us/overview/what-is-azure/) 
infrastructure which is one of the most recognized cloud services available. Among 
several other technological aspects, Microsoft Azure is also known for a high security 
level and for this matter it is compliant with the ISO industry standards 
[ISO27001](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27001/) 
(Information Security Management Standards) and [ISO27018](https://azure.microsoft.com/en-us/support/trust-center/compliance/iso27018/) 
(Protection of Personally Identifiable Information in public clouds).

## Disclaimer

Absolutely nothing is granted by the direct or indirect use of the content 
hereby described. This API contains references to medical terms and/or concepts
that exist in the Netherlands. These terms and/or concepts might not apply to 
other countries.

## Version History

### v1.0.280915
Added Dental Practice API group which includes 3 methods 
(create practice/dentists, create patient, load patient overview).

### v1.1.071015
Added Common API group which includes 2 methods (access, version),
implemented token-based authentication in all methods and updated Usage URLs.

### v1.2.131015
Added new Dental Practice methods (subscription, dentist). This last one replaces
partially the create practice method that is only to create the practice itself.

### v1.3.191015
Added new method to get Dentists and/or Assistants in a Practice. 
Internal optimizations and new documentation organization which includes new
URLs for API methods.

### v1.4.121115
Added new methods in Patient (Get) and Dentist (Get). Changed Subscription 
(Create to Activate), added Modify and Get. Revised and improved token format: 
now more suitable for use in an URL. Several internal optimizations and validations.

### v1.5.181115
Several code optimizations, improvements and validations. Access token is now generated
with a timestamp which makes it valid only for a certain period of time. 

### v1.6.261115
(α-version) Reduced timestamp validity, Dentists and Assistants can only be identified
by their client-side identifier. Subscription is now being check in several API methods.
New method to Close patient activity.

### v1.7.091215
Token is now generated using a new encoding method. Some errors identified 
during testing phase were solved and this documentation was updated, i.e. added new 
sections (Description, Usage and Results, Error Codes) in all methods. Description of 
possible error codes per API method is also now included. BSN number is now requested
for a Patient. Patient Overview now includes also information about allergy to local 
anesthesia.

### v1.8.110116
Improvements in Practice and Patient activation. BSN number is now received
hashed in the request and stored directly in database. When sent back in the response
it is also sent hashed. Some other minor improvements and optimizations.

### v1.9.140116
(β-version) Full revision of return codes and inclusion of HTTP codes in some cases. 
BSN number is now optional in Patient > Create. More improvements and optimizations.

# Group Common API

## Authentication > Get Token [/access/get?clientKey={clientKey}]

+ Parameters
    + clientKey: b2c38708d821833daf11 (required, string) - subscription client key as an encoded string

### API Definition [GET]

***Description***

This method is used to get a token based on a valid client key. Clients will 
receive their client key when they have an agreement to use this API service. 
This token must then be used in all other requests to API methods here described
(search for the `token` keyword).

***Usage***

The request must contain the `clientKey`. The response will be in the field `Token`. 
It is an authorized and encrypted string that includes a timestamp to make it valid 
during a specific time period and will be similar to:
*xe24csp34lqem662sbvyzbtz2z6pfclflpnlbm5aowrlazvhu5benfhsa64srg3e3teaka45llnue===*

***Response***

| HTTP Code  | API Code           | Found in          | Description                   |
| :--------: | :----------------- | :---------------- | :---------------------------- |
| 400        | ClientKey.Missing  | `Response Body`   | No ClientKey was given.       |
| 401        | ClientKey.NoAccess | `Response Header` | ClientKey is not valid.       |
| 200        | `token`            | `Token` field     | A valid token was issued.     |
| 200        | Unexpected.Error   | `Token` field     | Contact us via [email](<mailto:info@meamedica.nl>). |

+ Response 200 (application/json)

        {
            "Token": "string"
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>ClientKey.Missing</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess

## Current Version > Get [/version]

### API Definition [GET]

***Description***

This method is used to get the current version of this API mainly for informative
purposes. Nothing is expected in the request or as an URL parameter.

***Usage and Response***

No input is necessary to call this method so the response will just show the 
current version. No other possible values can be given. No errors can occur.

+ Response 200 (application/json)

        {
            "Version": "string"
        }

# Group Dental API

## Practice > Create [/practice/create]

### API Definition [POST]

***Description***

This method should be used to create a new dental practice. Besides some basic data
about the practice we should get the practice AGB code and also an email for contact 
purposes. It should also be given the number of patients currently registered.

***Usage***

The request must contain the `token` and some information about the practice:
- Unique identifier - AGB code
- Identification - Name, Number of patients, Administrative email
- Geographic location - Address, Postal code, City

***Response***

| HTTP Code  | API Code           | Found in          | Description                      |
| :--------: | :----------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing      | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired      | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters | `Response Body`   | Required parameters are missing. |
| 200        | Practice.Exists    | `Result` field    | Practice AGB already exists.     |
| 200        | Practice.NotAdded  | `Result` field    | Practice was not created.        |
| 200        | OK                 | `Result` field    | Practice was created.            |
| 200        | Unexpected.Error   | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Name": "string",
            "Address": "string",
            "PostalCode": "string",
            "City": "string",
            "Email": "string",
            "NumberOfPatients": 0,
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Practice > Get Information [/practice/get?practiceAgb={practiceAgb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get detailed information about the practice identified by 
the AGB code given as parameter.

***Usage***

The request must contain the `token` and the practice `AGB code`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | OK                    | `Result` field    | Practice was found.              |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB Code** and the following 
information about the practice is returned in the proper fields.
- Name, Contact and KVK number
- Geographic location - Address, Postal code, City
- Date of creation and date when this request was issued ( *dd-mm-yyyy* )

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Name": "string",
            "Address": "string",
            "Phone": "string",
            "Kvk": "string",
            "DateCreated": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Practice > Get Dentists [/practice/dentists/get?practiceAgb={practiceAgb}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get detailed information about the dentists and assistants
that work in the practice identified by the AGB code given as parameter.

***Usage***

The request must contain the `token` and the practice `AGB code`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | OK                    | `Result` field    | Dentists or assistants were found. |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB Code** and the following 
information about the practice dentists and/or assistants is returned in the proper 
fields.
- Dentist identifier, Initials, Lastname and Specialty
- Dentist email, BIG number and KNMT number ( *if available* )
- Assistant identifier, Initials, Lastname and Email ( *if available* )
- Date when this request was issued ( *dd-mm-yyyy* )

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentists": [
                {
                    "DentistId": "string",
                    "BigNumber": "string",
                    "KnmtNumber": "string",
                    "Initials": "string",
                    "LastName": "string",
                    "Specialty": "string",
                    "Email": "string"
                }
            ],
            "Assistants": [
                {
                    "AssistantId": "string",
                    "Initials": "string",
                    "LastName": "string",
                    "Email": "string"
                }
            ],
            "Result": "string",
            "Messages": [
                "string"
            ],
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Dentist > Create [/dentist/create]

### API Definition [POST]

***Description***

This method is meant to add a list of dentists and/or assistants to an existing
practice. There are two lists with data, one for the dentists and the other for 
the assistants. The practice AGB code is required as matching identifier. 

***Usage***

The request must contain the `token` and some information about the dentist or 
assistant to create. In one request, one dentist or one assistant or one of each can 
be created.
- Dentist identifier, Initials, Lastname and Specialty
- Dentist email, BIG number and KNMT number ( *optional* )
- Assistant identifier, Initials, Lastname and Email

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Customer.NotAdded     | `Result` field    | Dentist or assistant was not created. |
| 200        | Customer.Duplicate    | `Result` field    | Dentist or assistant already exists.  |
| 200        | Dentist.NotAdded      | `Result` field    | Dentist or assistant was not created. |
| 200        | Dentist.Exists        | `Result` field    | Dentist or assistant already exists.  |
| 200        | Dentist.NoSpecialty   | `Result` field    | Specialty was not found.         |
| 200        | OK                    | `Result` field    | Dentist was created.             |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB Code**.

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Dentists": [
                {
                  "DentistId": "string",
                  "BigNumber": "string",
                  "KnmtNumber": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Specialty": "string",
                  "Email": "string"
                }
            ],
            "Assistants": [
                {
                  "AssistantId": "string",
                  "Initials": "string",
                  "LastName": "string",
                  "Email": "string"
                }
            ],
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Dentist > Get Information [/dentist/get?practiceAgb={practiceAgb}&dentistId={dentistId}&token={token}]

+ Parameters
    + practiceAgb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + dentistId: 12345678 (required, number) - client-side identifier
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get detailed information about the dentist or assistant given. 
A dentist or an assistant should be identified by their client-side identifier.

***Usage***

The request must contain the `token`, the practice `AGB code` and the dentist/assistant 
`identifier`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Customer.NotFound     | `Result` field    | Dentist or assistant not found.  |
| 200        | Dentist.NotFound      | `Result` field    | Dentist or assistant not found.  |
| 200        | OK                    | `Result` field    | Dentist or assistant was found.  |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **Dentist identifier** and the following 
information about the practice dentist or assistant is returned in the proper 
fields.
- Dentist identifier, Initials, Lastname and Specialty
- Dentist email, BIG number and KNMT number ( *if available* )
- Assistant identifier, Initials, Lastname and Email
- Date when this request was issued ( *dd-mm-yyyy* )

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Dentist": {
                "DentistId": "string",
                "BigNumber": "string",
                "KnmtNumber": "string",
                "Initials": "string",
                "LastName": "string",
                "Specialty": "string",
                "Email": "string"
            },
            "Assistant": {
                "AssistantId": "string",
                "Initials": "string",
                "LastName": "string",
                "Email": "string"
            },
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Patient > Create [/patient/create]

### API Definition [POST]

***Description***

This method can be used to create one or more patients for a given practice. 
It expects to receive some generic data about the patients and about the 
practice were they are registered.

***Usage***

The request must contain the `token`, the practice `AGB code` and some information 
about the patient to create.
- Patient identifier, Gender ( *m/f* ) and Birthdate ( *dd-mm-yyyy* )
- Height ( *cm* ) and Weight ( *kg* )
- BSN number ( *hashed and optional* )

***NOTE*** the `BSN number` is received in a hashed format and stored that same way
in the database. This number does not exist in a readable format. For more information
about this *hashing* please check [SHA algorithm](https://en.wikipedia.org/wiki/Secure_Hash_Algorithm) and in more detail [SHA-256](https://en.wikipedia.org/wiki/SHA-2).

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Customer.NotAdded     | `Result` field    | Patient was not created.         |
| 200        | Patient.NotAdded      | `Result` field    | Patient was not created.         |
| 200        | OK                    | `Result` field    | Patient was created.              |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB Code** and the following 
information about the patient is returned in the proper fields.
- Patient number (in the client system)
- BSN number ( *hashed if available* )
- Patient status (`Patient.New`, `Patient.Inactive`, `Patient.Active`)
- Activation URL (only applicable to `Patient.New`, empty otherwise)

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Patients": [
                {
                  "PatientNr": "string",
                  "BsnHashed": "string",
                  "Gender": "string",
                  "Birthdate": "string",
                  "Height": "string",
                  "Weight": "string"
                }
            ],
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Patients": [
                {
                  "PatientNr": "string",
                  "HashedBSN": "string",
                  "PatientStatus": "string",
                  "ActivationUrl": "string"
                }
            ],
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Patient > Get Overview [/patient/overview/get?practiceagb={practiceagb}&patientnr={patientnr}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + patientnr: 1 (required, number) - patient identifier in client system
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get an overview of some patient information. The information
will be given only if the patient belongs to the specified practice.

***Usage***

The request must contain the `token`, the practice `AGB code` and the patient 
`identifier`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Patient.NotFound      | `Result` field    | Patient not found.               |
| 200        | OK                    | `Result` field    | Patient was found.               |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code** and the following 
information about the patient is returned in the proper fields.
- Patient identifier
- BSN number ( *hashed if available* )
- Latest ASA score, Number of medicines in use
- Number of MTI messages, Allergic to anesthesia
- Date when this request was issued ( *dd-mm-yyyy* )

+ Response 200 (application/json)

        {
            "PatientNr": "string",
            "HashedBSN": "string",
            "AsaScore": "string",
            "NrOfMedicines": "string",
            "NrOfMtiMessages": "string",
            "AnesthesiaAllergy": "string",
            "InformationDate": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired
        
## Patient > Get Information [/patient/get?practiceagb={practiceagb}&patientnr={patientnr}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + patientnr: 1 (required, number) - patient identifier in client system
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get details about the given patient. The information
will be given only if the patient belongs to the specified practice.

***Usage***

The request must contain the `token`, the practice `AGB code` and the patient 
`identifier`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Patient.NotFound      | `Result` field    | Patient not found.               |
| 200        | OK                    | `Result` field    | Patient was found.               |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code** and the following 
information about the patient is returned in the proper fields.
- Patient identifier, Gender ( *m/f* ) and Birthdate ( *dd-mm-yyyy* )
- BSN number ( *hashed if available* )
- Height ( *cm* ) and Weight ( *kg* )
- Patient Status (`Patient.New`, `Patient.Inactive`, `Patient.Active`)
- First Name, Last Name, Blood Group, City and Country ( *if available* )
- Date when this request was issued ( *dd-mm-yyyy* )


+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "PatientNr": "string",
            "HashedBSN": "string",
            "FirstName": "string",
            "LastName": "string",
            "BirthDate": "string",
            "Gender": "string",
            "Bloodgroup": "string",
            "Length": "string",
            "Weight": "string",
            "City": "string",
            "Country": "string",
            "PatientStatus": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Patient > Close [/patient/close]

### API Definition [POST]

***Description***

This method is used to close the activity of a patient inline with the client system.
The operation will be executed only if the patient belongs to the specified practice.

***Usage***

The request must contain the `token`, the practice `AGB code` and the patient 
`identifier`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Patient.NotFound      | `Result` field    | Patient not found.               |
| 200        | OK                    | `Result` field    | Patient was closed.               |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code**.

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "PatientNr": "string",
            "Token": "string"
        }
        
+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

## Subscription > Activate [/subscription/activate?practiceagb={practiceagb}&email={email}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + email: info@practice.nl (required, string) - administrative email of the practice
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [POST]

***Description***

This method is intended to activate a subscription for an existing practice. It
requires information about the practice to activate, an administrative email address
and the authorization token.

***Usage***

The request must contain the `token`, the practice `AGB code` and the practice
administrative `email`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Subscription.NotAdded | `Result` field    | Subscription was not created.    |
| 200        | Pricing.NotFound      | `Result` field    | Pricing was not found.           |
| 200        | OK                    | `Result` field    | Subscription was activated.      |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code**.

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired
        
## Subscription > Modify [/subscription/modify]

### API Definition [POST]

***Description***

This method is intended to modify an existing subscription. It requires the 
practice AGB as an identifier and afterwards subscription data, payment and 
pricing information.

***Usage***

The request must contain the `token`, the practice `AGB code` and some information 
about the subscription to modify.
- Description ( *optional* )
- License Type: 
  - **Y**early ( *paid once per year and can expire* )
  - **M**onthly ( *paid once per month and can expire* )
  - **A**uto renew ( *paid once per month and does not expire* )
- Pricing Tier: 
  - **B**asic
  - **S**tandard
  - **P**remium
- Payment Type: 
  - **i**Deal
  - **M**asterCard, **V**isa (requires *Card number, Year, Month, Code and Name*)
  - **B**ank transfer
  - **A**utomatic Debit (requires *Account number*)

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | Subscription.NotAdded | `Result` field    | Subscription was not created.    |
| 200        | Payment.NotAdded      | `Result` field    | Payment was not created.         |
| 200        | Pricing.NotFound      | `Result` field    | Pricing was not found.           |
| 200        | OK                    | `Result` field    | Subscription was updated.        |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code**.

+ Request (application/json)

        {
            "PracticeAgb": "string",
            "Description": "string",
            "LicenseType": "string",
            "PricingTier": "string",
            "PaymentType": "string",
            "CardNumber": "string",
            "CardYear": 0,
            "CardMonth": 0,
            "CardCode": 0,
            "CardName": "string",
            "AccountNumber": "string",
            "Token": "string"
        }

+ Response 200 (application/json)

        {
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired
        
## Subscription > Get [/subscription/get?practiceagb={practiceagb}&token={token}]

+ Parameters
    + practiceagb: 12345678 (required, number) - practice AGB code as an 8-digit number
    + token: 1g4qq30l3hffqo9za8da1zf3402xaq2ry6w2k02lfjk9w3g284kkoiw5ycdgfup13yycdat9ta (required, string) - encrypted authentication token

### API Definition [GET]

***Description***

This method is used to get details about the subscription assigned to the given 
practice. The resulting information does not include any sensitive and/or financial 
data.

***Usage***

The request must contain the `token` and the practice `AGB code`.

***Response***

| HTTP Code  | API Code              | Found in          | Description                      |
| :--------: | :-------------------- | :---------------- | :------------------------------- |
| 400        | Token.Missing         | `Response Body`   | No Token was given.              |
| 401        | ClientKey.NoAccess    | `Response Header` | ClientKey is not valid.          |
| 401        | Token.Expired         | `Response Header` | Token is no longer valid.        |
| 400        | Missing.Parameters    | `Response Body`   | Required parameters are missing. |
| 200        | Practice.NotFound     | `Result` field    | Practice was not found.          |
| 200        | Subscription.NotFound | `Result` field    | Subscription was not found.      |
| 200        | Subscription.Expired  | `Result` field    | Subscription has expired.        |
| 200        | Subscription.NoInfo   | `Result` field    | Subscription has missing data.   |
| 200        | Subscription.NotPaid  | `Result` field    | Subscription was not paid.       |
| 200        | OK                    | `Result` field    | Subscription was found.          |
| 200        | Unexpected.Error      | `Result` field    | Contact us via [email](<mailto:info@meamedica.nl>). |

In case of `OK`, the `Messages` field has the **AGB code** and the following 
information about the subscription is returned in the proper fields.
- Description and Date created ( *dd-mm-yyyy* )
- License Type (`Yearly`, `Monthly`, `AutoRenew`) and License Date ( *dd-mm-yyyy* )
- Pricing Tier (`Basic`, `Standard`, `Premium`) and Price per Patient ( *eur* )
- Payment Type (`iDeal`, `MasterCard`, `Visa`, `Bank transfer`, `Automatic Debit`) and Discount
- Date when this request was issued ( *dd-mm-yyyy* )

+ Response 200 (application/json)

        {
            "InformationDate": "string",
            "Description": "string",
            "DateCreated": "string",
            "LicenseType": "string",
            "LicenseDate": "string",
            "Discount": "string",
            "PricingTier": "string",
            "PricePerPatient": "string",
            "PaymentType": "string",
            "Result": "string",
            "Messages": [
                "string"
            ]
        }
        
+ Response 400 (application/json)

    + Body

            <Error><Message>Token.Missing</Message></Error> 
            or 
            <Error><Message>Missing.Parameters</Message></Error>

+ Response 401 (application/json)
    
    + Headers

            WWW-Authenticate:ClientKey.NoAccess or WWW-Authenticate:Token.Expired

# Group Technical Reference

As a background note this API documentation is hosted at and was done using 
[Apiary](https://apiary.io) and (some of) the resources used to describe 
it can be found in the following URLs:
- **API Blueprint Tutorial** : https://docs.apiary.io/api_101/api_blueprint_tutorial/
- **API Examples** : https://github.com/apiaryio/api-blueprint/tree/master/examples
- **API Blueprint** : https://apiblueprint.org/ (detailed technical information)

As described before the **BSN number** is received hashed and more information about 
this process can be found in the following URLs:
- **Secure Hash Algorithm** : https://en.wikipedia.org/wiki/Secure_Hash_Algorithm
- **SHA-256** : https://en.wikipedia.org/wiki/SHA-2

